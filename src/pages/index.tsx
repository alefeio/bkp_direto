import { useEffect } from "react";
import Head from "next/head";
import { useSession, signIn } from "next-auth/react";
import { Flex, Button, Stack } from "@chakra-ui/react";
import { SubmitHandler, useForm } from "react-hook-form";

import * as yup from 'yup'
import { yupResolver } from '@hookform/resolvers/yup'

import Image from "next/image";
import Router from "next/router";
import { Input } from "../components/Form/Input";

type SignInFormData = {
  email: string
  password: string
}

const signInFormSchema = yup.object().shape({
  email: yup.string().required('E-mail obrigatório!').email('E-mail inválido!'),
  password: yup.string().required('Digite a senha!')
})

const Home = () => {
  const { register, handleSubmit, formState } = useForm({
    resolver: yupResolver(signInFormSchema)
  })
  const { data: session } = useSession();

  const { errors } = formState

  useEffect(() => {
    !!session && Router.push("/dashboard");
  }, [session]);

  const handleSignIn: SubmitHandler<SignInFormData> = async (values) => {
    await new Promise(resolve => setTimeout(resolve, 2000))

    console.log(values)
  }

  return (
    <div>
      <Head>
        <title>Direto</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex w="100vw" h="90vh" align="center" justify="center">
        <Flex
          as="form"
          w="100%"
          maxWidth={400}
          flexDir="column"
          align="center"
          justify="center"
          p="8"
          textAlign="center"
          onSubmit={handleSubmit(handleSignIn)}
        >
          <Image
            src="/assets/images/logo-direto.png"
            alt="Logomarca da Direto"
            width={200}
            height={46}
          />
          <Stack spacing="2" mt="4">
            <Input {...register("email")} error={errors.email} name="email" type="email" label="E-mail" variant='outline' bgColor="whiteAlpha.500" />
            <Input {...register("password")} error={errors.password} name="password" type="password" label="Senha" variant='outline' bgColor="whiteAlpha.500" />
          </Stack>
          <Button type="submit" mt="6" colorScheme="purple" size="sm" isLoading={formState.isSubmitting}>
            Entrar
          </Button>
        </Flex>
        <Button onClick={() => signIn("cognito")} mt="6" colorScheme="purple" size="sm">
          Entrar
        </Button>
      </Flex>
    </div>
  );
};

export default Home;
